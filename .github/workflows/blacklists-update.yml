name: Blacklist Updater

on: 
  schedule:
    - cron:  "35 */12 * * *"

  workflow_dispatch:

jobs:
  check_update:
    name: Check Updates
    runs-on: ubuntu-latest
    outputs:
      status: ${{ steps.check-need-update.outputs.NEEDUPDATE }}
    steps:
      - uses: actions/checkout@v3

      - name: Get OLD MD5
        id: get-md5-old
        run: echo "MD5OLD=$(grep blacklists.tar.gz MD5SUM.LST | awk {' print $1 '})" >> $GITHUB_OUTPUT
        continue-on-error: true

      - name: GET NEW MD5 
        id: get-md5-new
        run: echo "MD5NEW=$(curl -m 120 http://dsi.ut-capitole.fr/blacklists/download/MD5SUM.LST |grep blacklists.tar.gz | awk {' print $1 '})" >> $GITHUB_OUTPUT

      - name: print old md5
        run: echo "${{ steps.get-md5-old.outputs.MD5OLD }}"

      - name: print new md5
        run: echo "${{ steps.get-md5-new.outputs.MD5NEW }}"

      - name: Check if vars match
        id: check-need-update
        if: ${{steps.get-md5-new.outputs.MD5NEW == steps.get-md5-old.outputs.MD5OLD}}
        run: echo "NEEDUPDATE=0" >> $GITHUB_OUTPUT

      - name: print var
        run: echo ${{ steps.check-need-update.outputs.NEEDUPDATE }}

  update:
    if: ${{needs.check_update.outputs.status}} != '0'
    needs: check_update
    name: Execute Update
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v3
      
      - name: print var job
        run: echo ${{needs.check_update.outputs.status}}

      - name: Download Toulouse Blacklists
        run: "curl -o blacklists.tar.gz -m 120 http://dsi.ut-capitole.fr/blacklists/download/blacklists.tar.gz"
        # run: "curl -o blacklists.tar.gz -m 120 http://nsec.franceschelli.eu/blacklists.tar.gz"
        
      - name: Download Toulouse MD5 file
        run: "curl -o MD5SUM.LST -m 120 http://dsi.ut-capitole.fr/blacklists/download/MD5SUM.LST"
        # run: "curl -o md5new -m 120 http://nsec.franceschelli.eu/MD5SUM.LST"

      - name: Check if MD5 of the new file downloaded Match
        run: if md5sum --status --ignore-missing -c MD5SUM.LST; then echo "MD5 Match, we can continue!"; else exit 1; fi

      - name: Get Datetime
        id: get-date-time
        run: echo "DT=$(date -u +%Y-%m-%dT%H:%M:%SZ)" >> $GITHUB_OUTPUT

#      - name: Import GPG key
#        uses: crazy-max/ghaction-import-gpg@v5
#        with:
#          gpg_private_key: ${{ secrets.GPGKEY }}
#          passphrase: ${{ secrets.GPGPASSWORD }}
#          git_user_signingkey: true
#          git_commit_gpgsign: true

#      - name: Sign commit and push changes
#        run: |
#          git add .
#          git commit -S -m "[Bot] Update Blacklist (${{ steps.get-date-time.outputs.DT }})"
#          git push

      - name: Commit to repo
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "[Bot] Update Blacklist (${{ steps.get-date-time.outputs.DT }})"
          commit_user_name: "@francio87"
          commit_user_email: davide@franceschelli.eu
          commit_options: '--no-verify --signoff'
          commit_author: francio87 <davide@franceschelli.eu>
